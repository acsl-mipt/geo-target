namespace ru.mipt.acsl.mcc

'Управление аппаратом'
component Device
{
  parameters
  (
    'Уровень заряда батареи'
    u8  /per/ batteryLevel,
    'Уровень радио-сигнала'
    u8  /per/ signalLevel,
    'CRC дерева конфигурации'
    u16 crc,
    'Вид аппарата'
    u8 kind,
  )

  status all
  (
    batteryLevel,
    signalLevel,
    crc,
    kind,
  )
}

'Режимы'
component Mode
{
  parameters
  (
    'Текущий режим'
    u8 name,
  )

  'Все параметры'
  status all
  (
    name,
  )
}

'Текущее состояние полёта'
component Navigation with Motion, Mode, DogPoint, Route, Routes
{
  'Включить'
  command start()
  'Включить двигатель'
  command startEngine()
  'Взлететь'
  command takeOff()
  'Перейти в режим свободного полета'
  command freeFlying()
  'Лететь по маршруту'
  command flyRoute()
  'Ждать'
  command wait()
  'Возвратиться'
  command return()
  'Приземлиться'
  command land()
  'Выключить двигатель'
  command stopEngine()
  'Выключить'
  command stop()
  'Отменить посадку'
  command cancelLanding()
}

type route_point
struct
(
  'Широта'   f32 /grad/ latitude,
  'Долгота'  f32 /grad/ longitude,
  'Высота'   f32 /m/    altitude,
  'Скорость' f32 /mps/  speed,
  'Флаги'    u32        flags,
)

type route_points [route_point, 0..64]

type route
struct
(
  'Имя маршрута'        u16          name,
  'Круговой ли маршрут' b8           isRing,
  'Точки маршрута'      route_points points,
)

type routes [route, 0..10]

type routes_info
struct
(
  'Следующая точка активного маршрута' u16    nextPoint,
  'Маршруты'                           routes routes,
  'Активный маршрут'                   route  activeRoute,
)

'Управление маршрутом полёта'
component Route
{
  parameters
  (
    routes_info routesInfo,
  )

  "Очистить маршрут"
  command clearRoute()

  'Начать формирование маршрута'
  command beginRoute
  (
    "Номер маршрута"           u16 name,
    "Количество путевых точек" u8  waypointsCount,
    "Кольцевой маршрут"        b8  isRing,
  )

  'Задать путевую точку'
  command setRoutePoint
  (
    "Номер путевой точки (начиная с нуля)" u16       number,
    "Широта"                               f32 /m/   latitude,
    'Долгота'                              f32 /m/   longitude,
    'Высота'                               f32 /m/   altitude,
    'Скорость'                             f32 /mps/ speed,
    'Флаги'                                u32       flags,
  )

  'Закончить формирование маршрута'
  command endRoute()

  command setCurrentRoute
  (
    'Изменить маршрут полёта' u16 kind,
  )

  command setActivePoint
  (
    'Индекс точки, начиная с нуля' u16 index,
  )

  status all
  (
    routesInfo,
  )
}

'Компонент управления маршрутами'
component Routes
{
  parameters
  (
    routes_info routesInfo,
  )

  'Удалить маршрут по имени'
  command deleteRoute('Имя' u16 name)

  'Добавить маршрут в конец массива'
  command appendRoute('Данные маршрута' route route)

  'Обновить маршрут по имени'
  command updateRoute('Имя' u16 name, 'Данные маршрута' route route)

  status all
  (
    routesInfo,
  )
}

'Характеристики движения'
component Motion
{
  parameters
  (
    'Широта'                         f64 /grad/ latitude,
    'Долгота'                        f64 /grad/ longitude,
    'Высота'                         f64 /m/    altitude,
    'Точность определения положения' f64 /m/    accuracy,
    'Скорость'                       f64 /mps/  speed,
    'Тангаж'                         f64 /grad/ pitch,
    'Рыскание'                       f64 /grad/ heading,
    'Крен'                           f64 /grad/ roll,
    'Газ'                            u8  /per/  throttle,
  )

  status all
  (
    latitude,
    longitude,
    altitude,
    accuracy,
    speed,
    pitch,
    heading,
    roll,
    throttle,
  )
}

'Поводковая точка'
component DogPoint
{
  parameters
  (
    'Широта'  f64 /grad/ latitude,
    'Долгота' f64 /grad/ longitude,
    'Высота'  f64 /m/    altitude,
  )

  status all
  (
    latitude,
    longitude,
    altitude,
  )
}

'Летающий аппарат'
component FlyingDevice with Navigation
{
}