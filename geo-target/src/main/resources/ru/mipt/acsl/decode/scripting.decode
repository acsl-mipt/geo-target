"Модуль управления бортовыми скриптами (циклограммами)"
namespace ru.mipt.acsl.scripting

import ru.mipt.acsl.foundation.{s, b8, u8, guid, error_code}

'Идентификатор скрипта'
type script_id guid

'Информация о скрипте'
type script_info struct
(
  script_id scriptId,
  'Байткод скрипта'
  [u8]      scriptCode,
)

'Дата и время'
type date_time ber
'Период времени'
type period    ber

'Запланированный запуск скрипта'
type script_run_timing struct
(
  'Идентификатор запланированного запуска'
  guid        ^id,
  'Запуск запланирован'
  b8          isActive,
  script_id   scriptId,
  'Время запуска'
  date_time   runOn,
  'Периодический скрипт'
  b8          isRepeated,
  'Период повторения'
  period /s/  repeatPeriod,
  'Повторение ограничено'
  b8          isRepeatingLimitedByDate,
  'Дата и время окончания повторения запусков скрипта'
  date_time   repeatUntil,
)

type script struct
(
  script_info ^info,
  script_run_timing runTiming,
)

type scripting_error enum ber
(
  OK = 0,
  MAXIMUM_SCRIPTS_REACHED = 1,
  NOT_ENOUGH_SPACE_FOR_SCRIPT = 2,
  NO_SUCH_SCRIPT = 3,
  CONFLICTING_SCRIPT_IDS = 4,
)

'Управление бортовыми скриптами (циклограммами)'
component Scripting
{
  parameters
  (
    'Идентификаторы бортовых скриптов'
    [script]              scripts,
  )

  'Загрузить скрипт'
  command uploadScript(script_info script) -> scripting_error

  'Удалить скрипт'
  command deleteScript(script_id scriptId) -> scripting_error

  'Запустить скрипт незамедлительно'
  command runScriptNow(script_id scriptId) -> scripting_error

  'Запланировать запуск скрипта'
  command scheduleScriptRun(script_run_timing scriptRunTiming) -> scripting_error

  'Активировать запланированный запуск скрипта'
  command enableScriptRunTiming(guid scriptRunTimingId) -> scripting_error

  'Деактивировать запланированный запуск скрипта'
  command disableScriptRunTiming(guid scriptRunTimingId) -> scripting_error

  'Перечень загруженных скриптов'
  status availableScripts
  (
    scripts,
  )
}
